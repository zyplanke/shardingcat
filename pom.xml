<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <groupId>io.shardingcat</groupId>
    <artifactId>shardingcat</artifactId>
    <version>v1.0_20240914</version>
    <packaging>jar</packaging>
    <name>shardingcat</name>
    <description>The project of shardingcat-server</description>

    <properties>
        <java.version>1.8</java.version>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <app.encoding>UTF-8</app.encoding>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <version.template.file>VERSION.TXT.template</version.template.file>
        <version.file>VERSION.TXT</version.file>
    </properties>


    <repositories>
        <repository>
            <id>alimaven</id>
            <name>aliyun maven阿里云公共仓库</name>
            <url>https://maven.aliyun.com/repository/public</url>
        </repository>
    </repositories>
    <pluginRepositories>
        <pluginRepository>
            <id>alimaven</id>
            <name>aliyun maven阿里云公共仓库</name>
            <url>https://maven.aliyun.com/repository/public</url>
        </pluginRepository>
    </pluginRepositories>


    <dependencies>
        <dependency>
            <groupId>org.mongodb</groupId>
            <artifactId>mongo-java-driver</artifactId>
            <version>3.12.10</version>
        </dependency>
        <dependency>
            <groupId>org.iq80.leveldb</groupId>
            <artifactId>leveldb-api</artifactId>
            <version>0.10</version>
        </dependency>
        <dependency>
            <groupId>org.iq80.leveldb</groupId>
            <artifactId>leveldb</artifactId>
            <version>0.10</version>
            <exclusions>
                <exclusion>
                    <groupId>com.google.guava</groupId>
                    <artifactId>guava</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>32.1.3-jre</version>
        </dependency>
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>2.8.9</version>
        </dependency>
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>druid</artifactId>
            <version>1.0.26</version>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.4</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.codehaus.jsr166-mirror</groupId>
            <artifactId>jsr166y</artifactId>
            <version>1.7.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.lmax</groupId>
            <artifactId>disruptor</artifactId>
            <version>3.3.4</version>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-slf4j-impl</artifactId>
            <version>2.20.0</version>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <version>2.20.0</version>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-1.2-api</artifactId>
            <version>2.18.0</version>
        </dependency>
        <dependency>
            <groupId>com.univocity</groupId>
            <artifactId>univocity-parsers</artifactId>
            <version>2.8.4</version>
            <type>jar</type>
        </dependency>
        <dependency>
            <groupId>net.sf.ehcache</groupId>
            <artifactId>ehcache-core</artifactId>
            <version>2.6.11</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.mapdb</groupId>
            <artifactId>mapdb</artifactId>
            <version>1.0.7</version>
        </dependency>
        <dependency>
            <groupId>com.sequoiadb</groupId>
            <artifactId>sequoiadb-driver</artifactId>
            <version>1.12</version>
        </dependency>
        <dependency>
            <groupId>com.github.shyiko</groupId>
            <artifactId>mysql-binlog-connector-java</artifactId>
            <version>0.6.0</version>
        </dependency>
        <dependency>
            <groupId>com.mysql</groupId>
            <artifactId>mysql-connector-j</artifactId>
            <version>8.2.0</version>
        </dependency>
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>42.7.3</version>
        </dependency>
        <!--DOM4J FOR XML -->
        <dependency>
            <groupId>org.dom4j</groupId>
            <artifactId>dom4j</artifactId>
            <version>2.1.3</version>
            <exclusions>
                <exclusion>
                    <groupId>xml-apis</groupId>
                    <artifactId>xml-apis</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <!-- zookeeper -->
        <dependency>
            <groupId>org.apache.curator</groupId>
            <artifactId>curator-framework</artifactId>
            <version>4.2.0</version>
        </dependency>
        <dependency>
            <groupId>org.apache.curator</groupId>
            <artifactId>curator-recipes</artifactId>
            <version>4.2.0</version>
        </dependency>
        <dependency>
            <groupId>org.apache.curator</groupId>
            <artifactId>curator-test</artifactId>
            <version>4.2.0</version>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>log4j</groupId>
                    <artifactId>log4j</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
            <version>1.2.83</version>
        </dependency>
        <!-- joda日期处理工具 -->
        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
            <version>2.9.3</version>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
            <version>1.10.19</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.google.code.findbugs</groupId>
            <artifactId>jsr305</artifactId>
            <version>3.0.2</version>
        </dependency>
        <dependency>
            <groupId>com.esotericsoftware.kryo</groupId>
            <artifactId>kryo</artifactId>
            <version>2.10</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-csv</artifactId>
            <version>1.8</version>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-library</artifactId>
            <version>1.3</version>
        </dependency>
        <dependency>
            <groupId>commons-lang</groupId>
            <artifactId>commons-lang</artifactId>
            <version>2.6</version>
        </dependency>
        <dependency>
            <groupId>io.netty</groupId>
            <artifactId>netty-buffer</artifactId>
            <version>4.1.104.Final</version>
        </dependency>
    </dependencies>


    <build>
        <plugins>
            <!-- 此插件官网URL:  https://github.com/git-commit-id/git-commit-id-maven-plugin/ -->
            <!-- 查看Maven插件attributes列表及描述方法： mvn help:describe -Dplugin=pl.project13.maven:git-commit-id-plugin:4.9.10 -Ddetail -->
            <!-- 此插件用途为在Maven中可以获得Git信息供后续使用。默认以git开头的变量中存放获得的信息。部分常见的变量列举如下： -->
            <!-- git.branch             Maven进行build时 所在的Git分支名 -->
            <!-- git.commit.id          Maven进行build时 Git的HEAD指针指向的CommitHash(通常为所在Git Branch分支的最新提交记录)，40位的全格式 -->
            <!-- git.commit.id.abbrev   Maven进行build时 Git的HEAD指针指向的CommitHash(通常为所在Git Branch分支的最新提交记录)，前几位的缩略格式 -->
            <!-- git.build.time         Maven进行build时 日期时间戳(默认格式为：2024-07-01T21:01:02+0800) -->
            <!-- git.build.host         Maven进行build时 所用主机名 -->
            <!-- git.build.user.name    Maven进行build时 Git用户名(不是操作系统的登录用户名) -->
            <!-- git.build.user.email   Maven进行build时 Git用户电子邮箱 -->
            <plugin>
                <groupId>pl.project13.maven</groupId>
                <artifactId>git-commit-id-plugin</artifactId>
                <version>4.9.10</version>
                <configuration>
                    <!-- 是否使用本地git命令获取相关信息：true使用本地git命令(需安装高于2.10版本的Git软件)；false(默认)使用JGIT不使用本地git命令 -->
                    <useNativeGit>false</useNativeGit>
                    <!-- 指定Git的CommitHash的缩略格式位数(默认7位) -->
                    <abbrevLength>10</abbrevLength>
                    <dateFormat>yyyy-MM-dd'T'HH:mm:ssZ</dateFormat>
                    <verbose>false</verbose>
                </configuration>
                <executions>
                    <execution>
                        <id>get-the-git-commit-id-info</id>
                        <goals>
                            <goal>revision</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.google.code.maven-replacer-plugin</groupId>
                <artifactId>replacer</artifactId>
                <version>1.5.3</version>
                <executions>
                    <execution>
                        <id>generate-version-txt-file</id>
                        <phase>process-sources</phase>
                        <goals>
                            <goal>replace</goal>
                        </goals>
                        <configuration>
                            <file>${project.basedir}/${version.template.file}</file>
                            <outputFile>${project.basedir}/${version.file}</outputFile>
                            <replacements>
                                <replacement>
                                    <!--suppress UnresolvedMavenProperty -->
                                    <token>@projectname@</token>
                                    <value>${project.name}</value>
                                </replacement>
                                <replacement>
                                    <!--suppress UnresolvedMavenProperty -->
                                    <token>@projectversion@</token>
                                    <value>${project.version}</value>
                                </replacement>
                                <replacement>
                                    <!--suppress UnresolvedMavenProperty -->
                                    <token>@gitbuildtime@</token>
                                    <!--suppress UnresolvedMavenProperty -->
                                    <value>${git.build.time}</value>
                                </replacement>
                                <replacement>
                                    <!--suppress UnresolvedMavenProperty -->
                                    <token>@gitcommithash@</token>
                                    <!--suppress UnresolvedMavenProperty -->
                                    <value>${git.commit.id}</value>
                                </replacement>
                                <replacement>
                                    <!--suppress UnresolvedMavenProperty -->
                                    <token>@gitbuildhost@</token>
                                    <!--suppress UnresolvedMavenProperty -->
                                    <value>${git.build.host}</value>
                                </replacement>
                                <replacement>
                                    <!--suppress UnresolvedMavenProperty -->
                                    <token>@gitbuildusername@</token>
                                    <!--suppress UnresolvedMavenProperty -->
                                    <value>${git.build.user.name}</value>
                                </replacement>
                                <replacement>
                                    <!--suppress UnresolvedMavenProperty -->
                                    <token>@gitbranch@</token>
                                    <!--suppress UnresolvedMavenProperty -->
                                    <value>${git.branch}</value>
                                </replacement>
                                <replacement>
                                    <!--suppress UnresolvedMavenProperty -->
                                    <token>@gitrepourl@</token>
                                    <value>https://github.com/zyplanke/shardingcat.git</value>
                                </replacement>
                            </replacements>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>3.2.1</version>
                <configuration>
                    <attach>true</attach>
                </configuration>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.2.2</version>
                <configuration>
                    <excludes>
                        <exclude>**/.svn/**</exclude>
                    </excludes>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>test-jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-eclipse-plugin</artifactId>
                <version>2.10</version>
                <configuration>
                    <sourceExcludes>
                        <sourceExclude>**/.svn/**</sourceExclude>
                    </sourceExcludes>
                    <downloadSources>true</downloadSources>
                    <outputDirectory>classes</outputDirectory>
                    <additionalConfig>
                        <file>
                            <name>.settings/org.eclipse.core.resources.prefs</name>
                            <content>
                                <![CDATA[eclipse.preferences.version=1${line.separator}encoding/<project>=${app.encoding}${line.separator}]]>
                            </content>
                        </file>
                    </additionalConfig>
                </configuration>
            </plugin>

            <plugin>
                <!--生成可直接启动应用程序(包括可执行的JDK、依赖jar等)的插件。 其官网 https://www.mojohaus.org/plugins.html -->
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>appassembler-maven-plugin</artifactId>
                <version>1.10</version>
                <configuration>
                    <configurationDirectory>conf</configurationDirectory>
                    <includeConfigurationDirectoryInClasspath>true</includeConfigurationDirectoryInClasspath>
                    <useWildcardClassPath>true</useWildcardClassPath>
                    <!--lib下直接存放jar，没有命名空间的文件夹（如com/apache)，如果没有这个选项则放在lib下的jar包会被com/apache类似的多层文件夹包裹起来-->
                    <repositoryLayout>flat</repositoryLayout>
                    <!-- appassembler插件generated daemons生成存放的目标目录 -->
                    <target>${project.build.directory}/appassembler</target>
                    <daemons>
                        <daemon>
                            <id>${project.name}</id>
                            <mainClass>io.shardingcat.ShardingCatStartup</mainClass>
                            <commandLineArguments>
                                <commandLineArgument>start</commandLineArgument>
                            </commandLineArguments>
                            <platforms>
                                <!-- 通过Java Service Wrapper (JSW)生成各个运行平台的执行文件 -->
                                <platform>jsw</platform>
                            </platforms>
                            <jvmSettings>
                                <!-- JVM启动选项（每个选项必须单独放置一个XML标签中，多个选项不能连写） -->
                                <systemProperties>
                                    <systemProperty>SHARDINGCAT_HOME=.</systemProperty>
                                </systemProperties>
                                <extraArguments>
                                    <extraArgument>-server</extraArgument>
                                    <extraArgument>-XX:MaxDirectMemorySize=2048m</extraArgument>
                                    <extraArgument>-Xms1024m</extraArgument>
                                    <extraArgument>-Xmx8192m</extraArgument>
                                    <!-- 开启jvm gc的日志输出（必须确保gclogs目录已经创建） -->
                                    <extraArgument>-verbose:gc</extraArgument>
                                    <!-- 以下为Java8输出gc日志选项格式。 若Java版本≥9，则需要按新版Java的选项格式进行配置 -->
                                    <extraArgument>-Xloggc:gclogs/jvm_gc_StartUpTime%t.log</extraArgument>
                                    <extraArgument>-XX:+UseGCLogFileRotation</extraArgument>
                                    <extraArgument>-XX:NumberOfGCLogFiles=10</extraArgument>
                                    <extraArgument>-XX:GCLogFileSize=10M</extraArgument>
                                    <extraArgument>-XX:+HeapDumpOnOutOfMemoryError</extraArgument>
                                    <extraArgument>-XX:HeapDumpPath=gclogs</extraArgument>
                                    <extraArgument>-XX:+PrintGCDateStamps</extraArgument>
                                    <extraArgument>-XX:+PrintGCTimeStamps</extraArgument>
                                    <extraArgument>-XX:+PrintGCDetails</extraArgument>
                                    <!-- 若需要可开启远程JMX -->
                                    <!-- <extraArgument>-Dcom.sun.management.jmxremote</extraArgument>-->
                                    <!-- <extraArgument>-Dcom.sun.management.jmxremote.port=1984</extraArgument>-->
                                    <!-- <extraArgument>-Dcom.sun.management.jmxremote.authenticate=false</extraArgument>-->
                                    <!-- <extraArgument>-Dcom.sun.management.jmxremote.ssl=false</extraArgument>-->
                                </extraArguments>
                            </jvmSettings>
                            <generatorConfigurations>
                                <generatorConfiguration>
                                    <generator>jsw</generator>
                                    <includes>
                                        <!-- 截止2024年6月底，appassembler-maven-plugin插件版本数年未更新，因此其使用的wrapper-delta-pack的版本较低不支持arm平台，所以会提示not found in map警告，可忽略。-->
                                        <!-- 若未来当appassembler-maven-plugin插件版本升级后携带了新版wrapper-delta-pack则无此警告 -->
                                        <include>aix-ppc-64</include>
                                        <include>linux-x86-64</include>
                                        <include>linux-arm-64</include>
                                        <include>macosx-universal-64</include>
                                        <include>macosx-arm-64</include>
                                        <include>windows-x86-64</include>
                                    </includes>
                                    <configuration>
                                        <property>
                                            <name>configuration.directory.in.classpath.first</name>
                                            <value>conf</value>
                                        </property>
                                        <property>
                                            <name>wrapper.ping.timeout</name>
                                            <value>120</value>
                                        </property>
                                        <property>
                                            <name>set.default.REPO_DIR</name>
                                            <value>lib</value>
                                        </property>
                                        <property>
                                            <name>wrapper.logfile.maxsize</name>
                                            <value>512m</value>
                                        </property>
                                        <property>
                                            <name>wrapper.logfile.maxfiles</name>
                                            <value>30</value>
                                        </property>
                                        <property>
                                            <name>wrapper.logfile</name>
                                            <value>wrapper.log</value>
                                        </property>
                                    </configuration>
                                </generatorConfiguration>
                            </generatorConfigurations>
                        </daemon>
                    </daemons>
                </configuration>
                <executions>
                    <execution>
                        <id>generate-appassembler-jsw</id>
                        <phase>package</phase>
                        <goals>
                            <goal>generate-daemons</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <!-- 由于①appassembler-maven-plugin插件版本使用的wrapper-delta-pack为3.2.3版，其版本较低不支持arm平台；②在appassembler-maven-plugin插件中JavaServiceWrapperDaemonGenerator类中代码也写死了可携带的平台范围。-->
                <!-- 新版wrapper-delta-pack可浏览网页：https://wrapper.tanukisoftware.com/doc/english/download.jsp  （应使用 "Delta Pack"的社区版Community）-->
                <!-- 对以上appassembler插件generated daemons生成的结果后，通过以下临时动作单独对新版wrapper-delta-pack进行下载、解压、拷贝至appassembler插件generated daemons生成存放的目标目录 -->
                <!-- 若未来appassembler-maven-plugin插件版本升级后携带了新版wrapper-delta-pack，则以下antrun插件的动作可删除不再需要 -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>3.1.0</version>
                <executions>
                    <execution>
                        <id>copy-newer-wrapper-version-files</id>
                        <phase>package</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <property name="temp.download.dir" value="${project.build.directory}/tempdownload"/>
                                <!--suppress UnresolvedMavenProperty -->
                                <mkdir dir="${temp.download.dir}"/>
                                <!--suppress UnresolvedMavenProperty -->
                                <get src="https://download.tanukisoftware.com/wrapper/3.5.59/wrapper-delta-pack-3.5.59.tar.gz" dest="${temp.download.dir}/wrapper-delta-pack-3.5.59.tar.gz" skipexisting="true"/>
                                <!--suppress UnresolvedMavenProperty -->
                                <untar compression="gzip" src="${temp.download.dir}/wrapper-delta-pack-3.5.59.tar.gz" dest="${temp.download.dir}"/>
                                <copy todir="${project.build.directory}/appassembler/jsw/${project.name}/lib/" overwrite="true">
                                    <!--suppress UnresolvedMavenProperty -->
                                    <fileset dir="${temp.download.dir}/wrapper-delta-pack-3.5.59/lib/">
                                        <include name="wrapper.jar"/>   <!--用新版wrapper.jar覆盖老版本-->
                                        <include name="wrapper-windows-x86-64.dll"/>   <!--用新版库文件覆盖老版本-->
                                        <include name="libwrapper-aix-ppc-64.so"/>   <!--用新版库文件覆盖老版本-->
                                        <include name="libwrapper-linux-x86-64.so"/>   <!--用新版库文件覆盖老版本-->
                                        <include name="libwrapper-macosx-universal-64.jnilib"/>   <!--用新版库文件覆盖老版本-->
                                        <include name="libwrapper-linux-arm-64.so"/>   <!--增加arm64版本库文件-->
                                        <include name="libwrapper-macosx-arm-64.dylib"/>   <!--增加arm64版本库文件-->
                                    </fileset>
                                </copy>
                                <copy todir="${project.build.directory}/appassembler/jsw/${project.name}/bin/" overwrite="true">
                                    <!--suppress UnresolvedMavenProperty -->
                                    <fileset dir="${temp.download.dir}/wrapper-delta-pack-3.5.59/bin/">
                                        <include name="wrapper-windows-x86-64.exe"/>   <!--用新版可执行文件覆盖老版本-->
                                        <include name="wrapper-aix-ppc-64"/>   <!--用新版可执行文件覆盖老版本-->
                                        <include name="wrapper-linux-x86-64"/>   <!--用新版可执行文件覆盖老版本-->
                                        <include name="wrapper-macosx-universal-64"/>   <!--用新版可执行文件覆盖老版本-->
                                        <include name="wrapper-linux-arm-64"/>   <!--增加arm64版本可执行文件-->
                                        <include name="wrapper-macosx-arm-64"/>   <!--增加arm64版本可执行文件-->
                                    </fileset>
                                </copy>
                                <!--用新版的bat脚本文件覆盖老版本，并替换其中的变量-->
                                <!--suppress UnresolvedMavenProperty -->
                                <copy file="${temp.download.dir}/wrapper-delta-pack-3.5.59/bin/DemoApp.bat" tofile="${project.build.directory}/appassembler/jsw/${project.name}/bin/${project.name}.bat" overwrite="true"/>
                                <replaceregexp file="${project.build.directory}/appassembler/jsw/${project.name}/bin/${project.name}.bat" match="demoapp.conf" replace="wrapper.conf" flags="g" byline="true"/>
                                <!--用新版的shell脚本文件覆盖老版本，并替换其中的变量-->
                                <!--suppress UnresolvedMavenProperty -->
                                <copy file="${temp.download.dir}/wrapper-delta-pack-3.5.59/bin/demoapp" tofile="${project.build.directory}/appassembler/jsw/${project.name}/bin/${project.name}" overwrite="true"/>
                                <replaceregexp file="${project.build.directory}/appassembler/jsw/${project.name}/bin/${project.name}" match="demoapp.conf" replace="wrapper.conf" flags="g" byline="true"/>
                                <replaceregexp file="${project.build.directory}/appassembler/jsw/${project.name}/bin/${project.name}" match="demoapp" replace="${project.name}" flags="g" byline="true"/>
                                <replaceregexp file="${project.build.directory}/appassembler/jsw/${project.name}/bin/${project.name}" match="Wrapper Demo Application" replace="${project.name}" flags="g" byline="true"/>
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <!-- 然后打包为可发布的zip/tar文件(打包的内容、目标格式由descriptor的配置文件定义) -->
                <!-- 本插件用途官网描述为：combine project output into a single distributable archive that also contains dependencies, modules, site documentation, and other files -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>3.5.0</version>
                <configuration>
                    <descriptors>
                        <descriptor>src/main/assembly/assembly-win.xml</descriptor>
                        <descriptor>src/main/assembly/assembly-linux.xml</descriptor>
                        <descriptor>src/main/assembly/assembly-mac.xml</descriptor>
                        <descriptor>src/main/assembly/assembly-unix.xml</descriptor>
                        <!-- <descriptor>src/main/assembly/assembly-testtool.xml</descriptor>-->
                    </descriptors>
                </configuration>
                <executions>
                    <execution>
                        <id>building-single-distributable-archive-file</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>


</project>
